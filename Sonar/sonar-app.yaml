apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-config
  labels:
    app: sonar
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "<SQLUSERNAME>"
  SONARQUBE_JDBC_PASSWORD: "<SQLPASSWORD>"
  JAVA_OPTS: "-Duser.timezone=America/Bogota -Xmx2048m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar
  labels:
    app: sonar
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonar
  template:
    metadata:
      labels:
        app: sonar
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        envFrom:
        - configMapRef:
            name: sonar-config
        volumeMounts:
        - name: app-pvc
          mountPath: "/opt/sonarqube/data/"
          subPath: data
        - name: app-pvc
          mountPath: "/opt/sonarqube/extensions/"
          subPath: extensions
        resources:
          requests:
            memory: "1024Mi"
          limits:
            memory: "2048Mi"
      volumes:
      - name: app-pvc
        persistentVolumeClaim:
          claimName: sonar-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonar
  labels: 
    app: sonar
spec:
  selector:
    app: sonar
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 9000
      name: 8080-http
---
apiVersion: route.openshift.io/v1
kind: Route
id: sonar-http
metadata:
  labels:
    app: sonar
  name: sonar-http
spec:
  port:
    targetPort: 8080-http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  to:
    kind: Service
    name: sonar
    weight: 100